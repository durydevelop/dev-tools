/* soapzpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy.cpp
   Generated by gSOAP 2.8.116 for /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapzpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy.h"

zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy(const zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy_init(_soap->imode, _soap->omode);
}

zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy(struct soap *_soap, const char *soap_endpoint_url)
{	this->soap = _soap;
	this->soap_own = false;
	zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy_init(_soap->imode, _soap->omode);
	soap_endpoint = soap_endpoint_url;
}

zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy(const char *soap_endpoint_url)
{	this->soap = soap_new();
	this->soap_own = true;
	zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = soap_endpoint_url;
}

zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy_init(iomode, iomode);
}

zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy(const char *soap_endpoint_url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy_init(iomode, iomode);
	soap_endpoint = soap_endpoint_url;
}

zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy_init(imode, omode);
}

zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::~zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy()
{	if (this->soap_own)
	{	zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::destroy();
		soap_free(this->soap);
	}
}

void zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        { "SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL },
        { "SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL },
        { "xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL },
        { "xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL },
        { "ns1", "http://zpcu-qinfosedi-fascia-delay-ws.ws.localhost/", NULL, NULL },
        { NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy *zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::copy()
{	zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy *dup = SOAP_NEW_UNMANAGED(zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}

zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy& zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::operator=(const zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

::SOAP_ENV__Header *zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::soap_fault_subcode()
{	return ::soap_fault_subcode(this->soap);
}

const char *zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::soap_fault_string()
{	return ::soap_fault_string(this->soap);
}

const char *zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::soap_fault_detail()
{	return ::soap_fault_detail(this->soap);
}

int zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::soap_close_socket()
{	return ::soap_closesock(this->soap);
}

int zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::soap_force_close_socket()
{	return ::soap_force_closesock(this->soap);
}

void zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::send_zpcu_qinfosedi_fascia_delay_ws_USCOREQuery(const char *soap_endpoint_url, const char *soap_action, _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery *ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery)
{
	struct __ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery soap_tmp___ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.1.224:8080/ahi/servlet/SQLDataProviderServer/zpcu-qinfosedi-fascia-delay-ws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery.ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery = ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery(soap, &soap_tmp___ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery(soap, &soap_tmp___ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery, "-ns1:zpcu-qinfosedi-fascia-delay-ws_Query", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery(soap, &soap_tmp___ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery, "-ns1:zpcu-qinfosedi-fascia-delay-ws_Query", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::recv_zpcu_qinfosedi_fascia_delay_ws_USCOREQuery(_ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse &ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse)
{
	ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse.soap_get(soap, "ns1:zpcu-qinfosedi-fascia-delay-ws_QueryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::send_zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery(const char *soap_endpoint_url, const char *soap_action, _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery *ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery)
{
	struct __ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery soap_tmp___ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.1.224:8080/ahi/servlet/SQLDataProviderServer/zpcu-qinfosedi-fascia-delay-ws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery.ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery = ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery(soap, &soap_tmp___ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery(soap, &soap_tmp___ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery, "-ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQuery", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery(soap, &soap_tmp___ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery, "-ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQuery", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int zpcu_qinfosedi_fascia_delay_wsWSPortBindingProxy::recv_zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery(_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse &ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse)
{
	ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse.soap_get(soap, "ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQueryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
