/* soapStub.h
   Generated by gSOAP 2.8.116 for /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include <vector>
#define SOAP_NAMESPACE_OF_ns1	"http://zpcu-qinfosedi-fascia-delay-ws.ws.localhost/"

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 208116
# error "GSOAP VERSION 208116 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

class ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure;	/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:159 */
class ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable;	/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:161 */
class _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery;	/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:163 */
class _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse;	/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:165 */
class _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery;	/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:167 */
class _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse;	/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:169 */
struct __ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery;	/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:478 */
struct __ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery;	/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:545 */

/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:159 */
#ifndef SOAP_TYPE_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure
#define SOAP_TYPE_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure (8)
/* complex XML schema type 'ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQueryResponseStructure': */
class SOAP_CMAC ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure {
      public:
        /// Optional element 'ns1:SEDE' of XML schema type 'xsd:string'
        std::string *SEDE;
        /// Optional element 'ns1:GIRO' of XML schema type 'xsd:string'
        std::string *GIRO;
        /// Optional element 'ns1:PARTENZA' of XML schema type 'xsd:string'
        std::string *PARTENZA;
        /// Optional element 'ns1:COLORE_B' of XML schema type 'xsd:string'
        std::string *COLORE_USCOREB;
        /// Optional element 'ns1:ZP_DELAY' of XML schema type 'xsd:double'
        double *ZP_USCOREDELAY;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure
        virtual long soap_type(void) const { return SOAP_TYPE_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure, default initialized and not managed by a soap context
        virtual ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure); }
      public:
        /// Constructor with default initializations
        ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure() : SEDE(), GIRO(), PARTENZA(), COLORE_USCOREB(), ZP_USCOREDELAY(), soap() { }
        virtual ~ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure() { }
        /// Friend allocator used by soap_new_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure(struct soap*, int)
        friend SOAP_FMAC1 ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure * SOAP_FMAC2 soap_instantiate_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:161 */
#ifndef SOAP_TYPE_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable
#define SOAP_TYPE_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable (9)
/* complex XML schema type 'ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQueryResponseTable': */
class SOAP_CMAC ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable {
      public:
        /// Optional element 'ns1:item' of XML schema type 'ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQueryResponseStructure'
        std::vector<ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure *> item;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable
        virtual long soap_type(void) const { return SOAP_TYPE_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable, default initialized and not managed by a soap context
        virtual ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable); }
      public:
        /// Constructor with default initializations
        ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable() : item(), soap() { }
        virtual ~ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable() { }
        /// Friend allocator used by soap_new_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable(struct soap*, int)
        friend SOAP_FMAC1 ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable * SOAP_FMAC2 soap_instantiate_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:163 */
#ifndef SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery
#define SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery (10)
/* complex XML schema type 'ns1:zpcu-qinfosedi-fascia-delay-ws_Query': */
class SOAP_CMAC _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery {
      public:
        /// Required element 'ns1:m_UserName' of XML schema type 'xsd:string'
        std::string m_USCOREUserName;
        /// Required element 'ns1:m_Password' of XML schema type 'xsd:string'
        std::string m_USCOREPassword;
        /// Required element 'ns1:m_Company' of XML schema type 'xsd:string'
        std::string m_USCORECompany;
        /// Required element 'ns1:pSede' of XML schema type 'xsd:string'
        std::string pSede;
        /// Required element 'ns1:m_bCount' of XML schema type 'xsd:boolean'
        bool m_USCOREbCount;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery
        virtual long soap_type(void) const { return SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery, default initialized and not managed by a soap context
        virtual _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery); }
      public:
        /// Constructor with default initializations
        _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery() : m_USCOREUserName(), m_USCOREPassword(), m_USCORECompany(), pSede(), m_USCOREbCount(), soap() { }
        virtual ~_ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery() { }
        /// Friend allocator used by soap_new__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery(struct soap*, int)
        friend SOAP_FMAC1 _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery * SOAP_FMAC2 soap_instantiate__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:165 */
#ifndef SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse
#define SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse (11)
/* complex XML schema type 'ns1:zpcu-qinfosedi-fascia-delay-ws_QueryResponse': */
class SOAP_CMAC _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse {
      public:
        /// Optional element 'ns1:return' of XML schema type 'xsd:string'
        std::string *return_;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse
        virtual long soap_type(void) const { return SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse, default initialized and not managed by a soap context
        virtual _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse); }
      public:
        /// Constructor with default initializations
        _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse() : return_(), soap() { }
        virtual ~_ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse() { }
        /// Friend allocator used by soap_new__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse(struct soap*, int)
        friend SOAP_FMAC1 _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse * SOAP_FMAC2 soap_instantiate__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:167 */
#ifndef SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery
#define SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery (12)
/* complex XML schema type 'ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQuery': */
class SOAP_CMAC _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery {
      public:
        /// Required element 'ns1:m_UserName' of XML schema type 'xsd:string'
        std::string m_USCOREUserName;
        /// Required element 'ns1:m_Password' of XML schema type 'xsd:string'
        std::string m_USCOREPassword;
        /// Required element 'ns1:m_Company' of XML schema type 'xsd:string'
        std::string m_USCORECompany;
        /// Required element 'ns1:pSede' of XML schema type 'xsd:string'
        std::string pSede;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery
        virtual long soap_type(void) const { return SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery, default initialized and not managed by a soap context
        virtual _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery); }
      public:
        /// Constructor with default initializations
        _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery() : m_USCOREUserName(), m_USCOREPassword(), m_USCORECompany(), pSede(), soap() { }
        virtual ~_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery() { }
        /// Friend allocator used by soap_new__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery(struct soap*, int)
        friend SOAP_FMAC1 _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery * SOAP_FMAC2 soap_instantiate__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:169 */
#ifndef SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse
#define SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse (13)
/* complex XML schema type 'ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQueryResponse': */
class SOAP_CMAC _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse {
      public:
        /// Required element 'ns1:Records' of XML schema type 'ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQueryResponseTable'
        ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable *Records;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse
        virtual long soap_type(void) const { return SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse, default initialized and not managed by a soap context
        virtual _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse); }
      public:
        /// Constructor with default initializations
        _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse() : Records(), soap() { }
        virtual ~_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse() { }
        /// Friend allocator used by soap_new__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse(struct soap*, int)
        friend SOAP_FMAC1 _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse * SOAP_FMAC2 soap_instantiate__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:478 */
#ifndef SOAP_TYPE___ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery
#define SOAP_TYPE___ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery (26)
/* Wrapper: */
struct SOAP_CMAC __ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery {
      public:
        /** Optional element 'ns1:zpcu-qinfosedi-fascia-delay-ws_Query' of XML schema type 'ns1:zpcu-qinfosedi-fascia-delay-ws_Query' */
        _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery *ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery;
      public:
        /** Return unique type id SOAP_TYPE___ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery */
        long soap_type() const { return SOAP_TYPE___ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery; }
        /** Constructor with member initializations */
        __ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery() : ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery * SOAP_FMAC2 soap_instantiate___ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:545 */
#ifndef SOAP_TYPE___ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery
#define SOAP_TYPE___ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery (30)
/* Wrapper: */
struct SOAP_CMAC __ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery {
      public:
        /** Optional element 'ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQuery' of XML schema type 'ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQuery' */
        _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery *ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery;
      public:
        /** Return unique type id SOAP_TYPE___ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery */
        long soap_type() const { return SOAP_TYPE___ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery; }
        /** Constructor with member initializations */
        __ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery() : ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery * SOAP_FMAC2 soap_instantiate___ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:666 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (31)
/* SOAP_ENV__Header: */
struct SOAP_CMAC SOAP_ENV__Header {
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Header */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:666 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (32)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_CMAC SOAP_ENV__Code {
      public:
        /** Optional element 'SOAP-ENV:Value' of XML schema type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Code */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code() : SOAP_ENV__Value(), SOAP_ENV__Subcode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:666 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (34)
/* SOAP_ENV__Detail: */
struct SOAP_CMAC SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_<typename> assigned to __type */
        /** Do not create a cyclic data structure through this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Detail */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail() : __any(), __type(), fault() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:666 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (37)
/* SOAP_ENV__Reason: */
struct SOAP_CMAC SOAP_ENV__Reason {
      public:
        /** Optional element 'SOAP-ENV:Text' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Reason */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason() : SOAP_ENV__Text() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* /home/fabio/Dev/dev-tools/gsoap/temp/wsdl.h:666 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (38)
/* SOAP_ENV__Fault: */
struct SOAP_CMAC SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XML schema type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XML schema type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XML schema type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XML schema type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Fault */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault() : faultcode(), faultstring(), faultactor(), detail(), SOAP_ENV__Code(), SOAP_ENV__Reason(), SOAP_ENV__Node(), SOAP_ENV__Role(), SOAP_ENV__Detail() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* (built-in):0 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
typedef char *_XML;
#endif

/* (built-in):0 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
typedef char *_QName;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* double has binding name 'double' for type 'xsd:double' */
#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (16)
#endif

/* bool has binding name 'bool' for type 'xsd:boolean' */
#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (21)
#endif

/* std::string has binding name 'std__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (14)
#endif

/* _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse has binding name '_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse' for type '' */
#ifndef SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse
#define SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponse (13)
#endif

/* _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery has binding name '_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery' for type '' */
#ifndef SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery
#define SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery (12)
#endif

/* _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse has binding name '_ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse' for type '' */
#ifndef SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse
#define SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQueryResponse (11)
#endif

/* _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery has binding name '_ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery' for type '' */
#ifndef SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery
#define SOAP_TYPE__ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery (10)
#endif

/* ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable has binding name 'ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable' for type 'ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQueryResponseTable' */
#ifndef SOAP_TYPE_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable
#define SOAP_TYPE_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable (9)
#endif

/* ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure has binding name 'ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure' for type 'ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQueryResponseStructure' */
#ifndef SOAP_TYPE_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure
#define SOAP_TYPE_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure (8)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (38)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (37)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (34)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (32)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (31)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (40)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (39)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (33)
#endif

/* _ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery * has binding name 'PointerTo_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery' for type '' */
#ifndef SOAP_TYPE_PointerTo_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery
#define SOAP_TYPE_PointerTo_ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQuery (27)
#endif

/* _ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery * has binding name 'PointerTo_ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery' for type '' */
#ifndef SOAP_TYPE_PointerTo_ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery
#define SOAP_TYPE_PointerTo_ns1__zpcu_qinfosedi_fascia_delay_ws_USCOREQuery (23)
#endif

/* ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable * has binding name 'PointerTons1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable' for type 'ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQueryResponseTable' */
#ifndef SOAP_TYPE_PointerTons1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable
#define SOAP_TYPE_PointerTons1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseTable (22)
#endif

/* ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure * has binding name 'PointerTons1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure' for type 'ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQueryResponseStructure' */
#ifndef SOAP_TYPE_PointerTons1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure
#define SOAP_TYPE_PointerTons1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure (19)
#endif

/* double * has binding name 'PointerTodouble' for type 'xsd:double' */
#ifndef SOAP_TYPE_PointerTodouble
#define SOAP_TYPE_PointerTodouble (17)
#endif

/* std::string * has binding name 'PointerTostd__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (15)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/* std::vector<ns1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure *>  has binding name 'std__vectorTemplateOfPointerTons1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure' for type 'ns1:zpcu-qinfosedi-fascia-delay-ws_TabularQueryResponseStructure' */
#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure
#define SOAP_TYPE_std__vectorTemplateOfPointerTons1__zpcu_qinfosedi_fascia_delay_ws_USCORETabularQueryResponseStructure (20)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
