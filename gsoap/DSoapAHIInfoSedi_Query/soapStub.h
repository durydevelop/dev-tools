/* soapStub.h
   Generated by gSOAP 2.8.91 for /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include <vector>
#define SOAP_NAMESPACE_OF_ns1	"http://zpcu_test_fascia_delay.ws.localhost/"

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20891
# error "GSOAP VERSION 20891 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

class ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure;	/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:151 */
class ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable;	/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:153 */
class _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery;	/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:155 */
class _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse;	/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:157 */
class _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery;	/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:159 */
class _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse;	/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:161 */
struct __ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery;	/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:466 */
struct __ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery;	/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:533 */

/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:151 */
#ifndef SOAP_TYPE_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure
#define SOAP_TYPE_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure (9)
/* complex XML schema type 'ns1:zpcu_test_fascia_delay_TabularQueryResponseStructure': */
class SOAP_CMAC ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure {
      public:
        /// Optional element 'ns1:ZPCODGIR' of XML schema type 'xsd:string'
        std::string *ZPCODGIR;
        /// Optional element 'ns1:ZPCODPRO' of XML schema type 'xsd:string'
        std::string *ZPCODPRO;
        /// Optional element 'ns1:ZP_DELAY' of XML schema type 'xsd:double'
        double *ZP_USCOREDELAY;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure
        virtual long soap_type(void) const { return SOAP_TYPE_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure, default initialized and not managed by a soap context
        virtual ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure); }
      public:
        /// Constructor with default initializations
        ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure() : ZPCODGIR(), ZPCODPRO(), ZP_USCOREDELAY(), soap() { }
        virtual ~ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure() { }
        /// Friend allocator used by soap_new_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure(struct soap*, int)
        friend SOAP_FMAC1 ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure * SOAP_FMAC2 soap_instantiate_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:153 */
#ifndef SOAP_TYPE_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable
#define SOAP_TYPE_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable (11)
/* complex XML schema type 'ns1:zpcu_test_fascia_delay_TabularQueryResponseTable': */
class SOAP_CMAC ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable {
      public:
        /// Optional element 'ns1:item' of XML schema type 'ns1:zpcu_test_fascia_delay_TabularQueryResponseStructure'
        std::vector<ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure *> item;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable
        virtual long soap_type(void) const { return SOAP_TYPE_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable, default initialized and not managed by a soap context
        virtual ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable); }
      public:
        /// Constructor with default initializations
        ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable() : item(), soap() { }
        virtual ~ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable() { }
        /// Friend allocator used by soap_new_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable(struct soap*, int)
        friend SOAP_FMAC1 ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable * SOAP_FMAC2 soap_instantiate_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:155 */
#ifndef SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery
#define SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery (13)
/* complex XML schema type 'ns1:zpcu_test_fascia_delay_Query': */
class SOAP_CMAC _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery {
      public:
        /// Required element 'ns1:m_UserName' of XML schema type 'xsd:string'
        std::string m_USCOREUserName;
        /// Required element 'ns1:m_Password' of XML schema type 'xsd:string'
        std::string m_USCOREPassword;
        /// Required element 'ns1:m_Company' of XML schema type 'xsd:string'
        std::string m_USCORECompany;
        /// Required element 'ns1:pSede' of XML schema type 'xsd:string'
        std::string pSede;
        /// Required element 'ns1:m_bCount' of XML schema type 'xsd:boolean'
        bool m_USCOREbCount;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery
        virtual long soap_type(void) const { return SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery, default initialized and not managed by a soap context
        virtual _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery); }
      public:
        /// Constructor with default initializations
        _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery() : m_USCOREUserName(), m_USCOREPassword(), m_USCORECompany(), pSede(), m_USCOREbCount(), soap() { }
        virtual ~_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery() { }
        /// Friend allocator used by soap_new__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery(struct soap*, int)
        friend SOAP_FMAC1 _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery * SOAP_FMAC2 soap_instantiate__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:157 */
#ifndef SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse
#define SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse (15)
/* complex XML schema type 'ns1:zpcu_test_fascia_delay_QueryResponse': */
class SOAP_CMAC _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse {
      public:
        /// Optional element 'ns1:return' of XML schema type 'xsd:string'
        std::string *return_;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse
        virtual long soap_type(void) const { return SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse, default initialized and not managed by a soap context
        virtual _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse); }
      public:
        /// Constructor with default initializations
        _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse() : return_(), soap() { }
        virtual ~_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse() { }
        /// Friend allocator used by soap_new__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse(struct soap*, int)
        friend SOAP_FMAC1 _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse * SOAP_FMAC2 soap_instantiate__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:159 */
#ifndef SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery
#define SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery (17)
/* complex XML schema type 'ns1:zpcu_test_fascia_delay_TabularQuery': */
class SOAP_CMAC _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery {
      public:
        /// Required element 'ns1:m_UserName' of XML schema type 'xsd:string'
        std::string m_USCOREUserName;
        /// Required element 'ns1:m_Password' of XML schema type 'xsd:string'
        std::string m_USCOREPassword;
        /// Required element 'ns1:m_Company' of XML schema type 'xsd:string'
        std::string m_USCORECompany;
        /// Required element 'ns1:pSede' of XML schema type 'xsd:string'
        std::string pSede;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery
        virtual long soap_type(void) const { return SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery, default initialized and not managed by a soap context
        virtual _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery); }
      public:
        /// Constructor with default initializations
        _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery() : m_USCOREUserName(), m_USCOREPassword(), m_USCORECompany(), pSede(), soap() { }
        virtual ~_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery() { }
        /// Friend allocator used by soap_new__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery(struct soap*, int)
        friend SOAP_FMAC1 _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery * SOAP_FMAC2 soap_instantiate__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:161 */
#ifndef SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse
#define SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse (19)
/* complex XML schema type 'ns1:zpcu_test_fascia_delay_TabularQueryResponse': */
class SOAP_CMAC _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse {
      public:
        /// Required element 'ns1:Records' of XML schema type 'ns1:zpcu_test_fascia_delay_TabularQueryResponseTable'
        ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable *Records;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse
        virtual long soap_type(void) const { return SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse, default initialized and not managed by a soap context
        virtual _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse); }
      public:
        /// Constructor with default initializations
        _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse() : Records(), soap() { }
        virtual ~_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse() { }
        /// Friend allocator used by soap_new__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse(struct soap*, int)
        friend SOAP_FMAC1 _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse * SOAP_FMAC2 soap_instantiate__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:466 */
#ifndef SOAP_TYPE___ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery
#define SOAP_TYPE___ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery (30)
/* Wrapper: */
struct SOAP_CMAC __ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery {
      public:
        /** Optional element 'ns1:zpcu_test_fascia_delay_Query' of XML schema type 'ns1:zpcu_test_fascia_delay_Query' */
        _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery *ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery;
      public:
        /** Return unique type id SOAP_TYPE___ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery */
        long soap_type() const { return SOAP_TYPE___ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery; }
        /** Constructor with member initializations */
        __ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery() : ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery * SOAP_FMAC2 soap_instantiate___ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* /mnt/e/Dev/dev-tools/gsoap/temp/wsdl.h:533 */
#ifndef SOAP_TYPE___ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery
#define SOAP_TYPE___ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery (34)
/* Wrapper: */
struct SOAP_CMAC __ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery {
      public:
        /** Optional element 'ns1:zpcu_test_fascia_delay_TabularQuery' of XML schema type 'ns1:zpcu_test_fascia_delay_TabularQuery' */
        _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery *ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery;
      public:
        /** Return unique type id SOAP_TYPE___ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery */
        long soap_type() const { return SOAP_TYPE___ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery; }
        /** Constructor with member initializations */
        __ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery() : ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery * SOAP_FMAC2 soap_instantiate___ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* (built-in):0 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

/* (built-in):0 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (7)
typedef char *_QName;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (4)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* double has binding name 'double' for type 'xsd:double' */
#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (23)
#endif

/* bool has binding name 'bool' for type 'xsd:boolean' */
#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (26)
#endif

/* std::string has binding name 'std__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (21)
#endif

/* _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse has binding name '_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse' for type '' */
#ifndef SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse
#define SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse (19)
#endif

/* _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery has binding name '_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery' for type '' */
#ifndef SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery
#define SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery (17)
#endif

/* _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse has binding name '_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse' for type '' */
#ifndef SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse
#define SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse (15)
#endif

/* _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery has binding name '_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery' for type '' */
#ifndef SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery
#define SOAP_TYPE__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery (13)
#endif

/* ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable has binding name 'ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable' for type 'ns1:zpcu_test_fascia_delay_TabularQueryResponseTable' */
#ifndef SOAP_TYPE_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable
#define SOAP_TYPE_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable (11)
#endif

/* ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure has binding name 'ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure' for type 'ns1:zpcu_test_fascia_delay_TabularQueryResponseStructure' */
#ifndef SOAP_TYPE_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure
#define SOAP_TYPE_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure (9)
#endif

/* struct __ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery * has binding name 'PointerTo__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery' for type '-ns1:zpcu_test_fascia_delay_TabularQuery' */
#ifndef SOAP_TYPE_PointerTo__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery
#define SOAP_TYPE_PointerTo__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery (35)
#endif

/* struct __ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery * has binding name 'PointerTo__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery' for type '-ns1:zpcu_test_fascia_delay_Query' */
#ifndef SOAP_TYPE_PointerTo__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery
#define SOAP_TYPE_PointerTo__ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery (31)
#endif

/* bool * has binding name 'PointerTobool' for type 'xsd:boolean' */
#ifndef SOAP_TYPE_PointerTobool
#define SOAP_TYPE_PointerTobool (27)
#endif

/* double * has binding name 'PointerTodouble' for type 'xsd:double' */
#ifndef SOAP_TYPE_PointerTodouble
#define SOAP_TYPE_PointerTodouble (24)
#endif

/* std::string * has binding name 'PointerTostd__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (22)
#endif

/* _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse * has binding name 'PointerTo_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse' for type '' */
#ifndef SOAP_TYPE_PointerTo_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse
#define SOAP_TYPE_PointerTo_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponse (20)
#endif

/* _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery * has binding name 'PointerTo_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery' for type '' */
#ifndef SOAP_TYPE_PointerTo_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery
#define SOAP_TYPE_PointerTo_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQuery (18)
#endif

/* _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse * has binding name 'PointerTo_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse' for type '' */
#ifndef SOAP_TYPE_PointerTo_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse
#define SOAP_TYPE_PointerTo_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQueryResponse (16)
#endif

/* _ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery * has binding name 'PointerTo_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery' for type '' */
#ifndef SOAP_TYPE_PointerTo_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery
#define SOAP_TYPE_PointerTo_ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCOREQuery (14)
#endif

/* ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable * has binding name 'PointerTons1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable' for type 'ns1:zpcu_test_fascia_delay_TabularQueryResponseTable' */
#ifndef SOAP_TYPE_PointerTons1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable
#define SOAP_TYPE_PointerTons1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseTable (12)
#endif

/* ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure * has binding name 'PointerTons1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure' for type 'ns1:zpcu_test_fascia_delay_TabularQueryResponseStructure' */
#ifndef SOAP_TYPE_PointerTons1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure
#define SOAP_TYPE_PointerTons1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure (10)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (7)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (5)
#endif

/* std::vector<ns1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure *>  has binding name 'std__vectorTemplateOfPointerTons1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure' for type 'ns1:zpcu_test_fascia_delay_TabularQueryResponseStructure' */
#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure
#define SOAP_TYPE_std__vectorTemplateOfPointerTons1__zpcu_USCOREtest_USCOREfascia_USCOREdelay_USCORETabularQueryResponseStructure (25)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
